#!/bin/bash -eu

# This script opens a tab in the default browser for creating a pull
# request on GitHub.
#
# A branch name can be given, which will default to 'dev'.
#
# The path for the pull request will be taken from the remote named 'upstream'
# If such a remote is not defined, the remote named 'origin' will be used
# instead.

if [ $# -eq 0 ] || [ -z "$1" ]; then
    # Default to a branch named 'dev'
    branch_name="dev"
else
    # Take whatever branch name was given.
    branch_name="$1"
fi

if git config --get remote.upstream.url > /dev/null; then
    upstream='upstream'
elif git config --get remote.origin.url > /dev/null; then
    upstream='origin'
else
    echo 'Please run this command from a git repository' 1>&2
    # shellcheck disable=SC2016
    echo 'A remote named `upstream` or `origin` is required' 1>&2
    exit 1
fi

# Determine the path on GitHub from the remote URLs.
repo_path="$(git config --get remote."$upstream".url | grep -o 'github.com:[^\.]\+' | sed 's/github\.com://')"

my_branch="$(git rev-parse --abbrev-ref HEAD)"
tracking_branch="$(git for-each-ref --format='%(upstream:short)' "$(git symbolic-ref -q HEAD)")"

if [ "$tracking_branch" == "$upstream/$my_branch" ]; then
    from="$my_branch"
else
    # Determine the username from the git config.
    username="$(git config user.name)"

    from="$username:$my_branch"
fi

url="https://github.com/$repo_path/compare/$branch_name...$from?expand=1"

if command -v xdg-open > /dev/null; then
    xdg-open "$url" > /dev/null
else
    open "$url" > /dev/null
fi
